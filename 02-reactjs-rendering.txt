JSX elements must be rendered to appear in a web page

Taking our example from the JSX Elements intro page, we will render the element on the screen so that it displays as html.

JSX Element:
var header = <h1>Hello World</h1>;

Rendering the element:
// require the react library, which gives us access to react methods 
var React = require('react');

// require the react-dom library, which gives us access to react DOM methods
ReactDOM = require('react-dom');

// the render method accepts two arguments:
ReactDOM.render(header, document.getElementById('app'));

Rendering JSX elements doesn't need to be done with variables, html can be directly inserted.
The below example would output exactly the same as the above:

ReactDOM.render(<h1>Hello World</h1>, document.getElementById('app'));

The first argument tells us what to render, the second argument tells us where in the DOM to render the element.
The element will be appended to whatever element is selected by the second argument.


Referring to what we were saying in the intro, react is quick. 
ReactDOM.render on renders DOM elements that have changed. That means that if you render exactly the same thing twice in a row, the second render will do nothing.
This is controlled by something called the virtual dom.